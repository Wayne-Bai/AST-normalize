// ----------------------------------------------------------------------------
// File: three.js
//
// Desc: Three.js externs for Google's Closure Compiler.
//
// Copyright (c) 2014 VoodooJs Authors
// ----------------------------------------------------------------------------

/**
 * Autogenerated from http://www.dotnetwise.com/Code/Externs/
 * Src url: http://threejs.org/build/three.min.js
 *
 * Does not contain type information, so that is below.
 */
var THREE = {
    "REVISION": {},
    "extend": function () {},
    "CullFaceNone": {},
    "CullFaceBack": {},
    "CullFaceFront": {},
    "CullFaceFrontBack": {},
    "FrontFaceDirectionCW": {},
    "FrontFaceDirectionCCW": {},
    "BasicShadowMap": {},
    "PCFShadowMap": {},
    "PCFSoftShadowMap": {},
    "FrontSide": {},
    "BackSide": {},
    "DoubleSide": {},
    "NoShading": {},
    "FlatShading": {},
    "SmoothShading": {},
    "NoColors": {},
    "FaceColors": {},
    "VertexColors": {},
    "NoBlending": {},
    "NormalBlending": {},
    "AdditiveBlending": {},
    "SubtractiveBlending": {},
    "MultiplyBlending": {},
    "CustomBlending": {},
    "AddEquation": {},
    "SubtractEquation": {},
    "ReverseSubtractEquation": {},
    "ZeroFactor": {},
    "OneFactor": {},
    "SrcColorFactor": {},
    "OneMinusSrcColorFactor": {},
    "SrcAlphaFactor": {},
    "OneMinusSrcAlphaFactor": {},
    "DstAlphaFactor": {},
    "OneMinusDstAlphaFactor": {},
    "DstColorFactor": {},
    "OneMinusDstColorFactor": {},
    "SrcAlphaSaturateFactor": {},
    "MultiplyOperation": {},
    "MixOperation": {},
    "AddOperation": {},
    "UVMapping": function () {},
    "CubeReflectionMapping": function () {},
    "CubeRefractionMapping": function () {},
    "SphericalReflectionMapping": function () {},
    "SphericalRefractionMapping": function () {},
    "RepeatWrapping": {},
    "ClampToEdgeWrapping": {},
    "MirroredRepeatWrapping": {},
    "NearestFilter": {},
    "NearestMipMapNearestFilter": {},
    "NearestMipMapLinearFilter": {},
    "LinearFilter": {},
    "LinearMipMapNearestFilter": {},
    "LinearMipMapLinearFilter": {},
    "UnsignedByteType": {},
    "ByteType": {},
    "ShortType": {},
    "UnsignedShortType": {},
    "IntType": {},
    "UnsignedIntType": {},
    "FloatType": {},
    "UnsignedShort4444Type": {},
    "UnsignedShort5551Type": {},
    "UnsignedShort565Type": {},
    "AlphaFormat": {},
    "RGBFormat": {},
    "RGBAFormat": {},
    "LuminanceFormat": {},
    "LuminanceAlphaFormat": {},
    "RGB_S3TC_DXT1_Format": {},
    "RGBA_S3TC_DXT1_Format": {},
    "RGBA_S3TC_DXT3_Format": {},
    "RGBA_S3TC_DXT5_Format": {},
    "Color": function () {},
    "ColorKeywords": {
        "aliceblue": {},
        "antiquewhite": {},
        "aqua": {},
        "aquamarine": {},
        "azure": {},
        "beige": {},
        "bisque": {},
        "black": {},
        "blanchedalmond": {},
        "blue": {},
        "blueviolet": {},
        "brown": {},
        "burlywood": {},
        "cadetblue": {},
        "chartreuse": {},
        "chocolate": {},
        "coral": {},
        "cornflowerblue": {},
        "cornsilk": {},
        "crimson": {},
        "cyan": {},
        "darkblue": {},
        "darkcyan": {},
        "darkgoldenrod": {},
        "darkgray": {},
        "darkgreen": {},
        "darkgrey": {},
        "darkkhaki": {},
        "darkmagenta": {},
        "darkolivegreen": {},
        "darkorange": {},
        "darkorchid": {},
        "darkred": {},
        "darksalmon": {},
        "darkseagreen": {},
        "darkslateblue": {},
        "darkslategray": {},
        "darkslategrey": {},
        "darkturquoise": {},
        "darkviolet": {},
        "deeppink": {},
        "deepskyblue": {},
        "dimgray": {},
        "dimgrey": {},
        "dodgerblue": {},
        "firebrick": {},
        "floralwhite": {},
        "forestgreen": {},
        "fuchsia": {},
        "gainsboro": {},
        "ghostwhite": {},
        "gold": {},
        "goldenrod": {},
        "gray": {},
        "green": {},
        "greenyellow": {},
        "grey": {},
        "honeydew": {},
        "hotpink": {},
        "indianred": {},
        "indigo": {},
        "ivory": {},
        "khaki": {},
        "lavender": {},
        "lavenderblush": {},
        "lawngreen": {},
        "lemonchiffon": {},
        "lightblue": {},
        "lightcoral": {},
        "lightcyan": {},
        "lightgoldenrodyellow": {},
        "lightgray": {},
        "lightgreen": {},
        "lightgrey": {},
        "lightpink": {},
        "lightsalmon": {},
        "lightseagreen": {},
        "lightskyblue": {},
        "lightslategray": {},
        "lightslategrey": {},
        "lightsteelblue": {},
        "lightyellow": {},
        "lime": {},
        "limegreen": {},
        "linen": {},
        "magenta": {},
        "maroon": {},
        "mediumaquamarine": {},
        "mediumblue": {},
        "mediumorchid": {},
        "mediumpurple": {},
        "mediumseagreen": {},
        "mediumslateblue": {},
        "mediumspringgreen": {},
        "mediumturquoise": {},
        "mediumvioletred": {},
        "midnightblue": {},
        "mintcream": {},
        "mistyrose": {},
        "moccasin": {},
        "navajowhite": {},
        "navy": {},
        "oldlace": {},
        "olive": {},
        "olivedrab": {},
        "orange": {},
        "orangered": {},
        "orchid": {},
        "palegoldenrod": {},
        "palegreen": {},
        "paleturquoise": {},
        "palevioletred": {},
        "papayawhip": {},
        "peachpuff": {},
        "peru": {},
        "pink": {},
        "plum": {},
        "powderblue": {},
        "purple": {},
        "red": {},
        "rosybrown": {},
        "royalblue": {},
        "saddlebrown": {},
        "salmon": {},
        "sandybrown": {},
        "seagreen": {},
        "seashell": {},
        "sienna": {},
        "silver": {},
        "skyblue": {},
        "slateblue": {},
        "slategray": {},
        "slategrey": {},
        "snow": {},
        "springgreen": {},
        "steelblue": {},
        "tan": {},
        "teal": {},
        "thistle": {},
        "tomato": {},
        "turquoise": {},
        "violet": {},
        "wheat": {},
        "white": {},
        "whitesmoke": {},
        "yellow": {},
        "yellowgreen": {}
    },
    "Quaternion": function () {},
    "Vector2": function () {},
    "Vector3": function () {},
    "Vector4": function () {},
    "Line3": function () {},
    "Box2": function () {},
    "Box3": function () {},
    "Matrix3": function () {},
    "Matrix4": function () {},
    "Ray": function () {},
    "Sphere": function () {},
    "Frustum": function () {},
    "Plane": function () {},
    "Math": {
        "clamp": function () {},
        "clampBottom": function () {},
        "mapLinear": function () {},
        "smoothstep": function () {},
        "smootherstep": function () {},
        "random16": function () {},
        "randInt": function () {},
        "randFloat": function () {},
        "randFloatSpread": function () {},
        "sign": function () {},
        "degToRad": function () {},
        "radToDeg": function () {}
    },
    "Spline": function () {},
    "Triangle": function () {},
    "Vertex": function () {},
    "UV": function () {},
    "Clock": function () {},
    "EventDispatcher": function () {},
    "Raycaster": function () {},
    "Object3D": function () {},
    "Object3DIdCount": {},
    "Projector": function () {},
    "Face3": function () {},
    "Face4": function () {},
    "Geometry": function () {},
    "GeometryIdCount": {},
    "BufferGeometry": function () {},
    "Camera": function () {},
    "OrthographicCamera": function () {},
    "PerspectiveCamera": function () {},
    "Light": function () {},
    "AmbientLight": function () {},
    "AreaLight": function () {},
    "DirectionalLight": function () {},
    "HemisphereLight": function () {},
    "PointLight": function () {},
    "SpotLight": function () {},
    "Loader": function () {},
    "ImageLoader": function () {},
    "JSONLoader": function () {},
    "LoadingMonitor": function () {},
    "SceneLoader": function () {},
    "TextureLoader": function () {},
    "Material": function () {},
    "MaterialIdCount": {},
    "LineBasicMaterial": function () {},
    "LineDashedMaterial": function () {},
    "MeshBasicMaterial": function () {},
    "MeshLambertMaterial": function () {},
    "MeshPhongMaterial": function () {},
    "MeshDepthMaterial": function () {},
    "MeshNormalMaterial": function () {},
    "MeshFaceMaterial": function () {},
    "ParticleBasicMaterial": function () {},
    "ParticleCanvasMaterial": function () {},
    "ShaderMaterial": function () {},
    "SpriteMaterial": function () {},
    "SpriteAlignment": {
        "topLeft": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "topCenter": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "topRight": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "centerLeft": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "center": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "centerRight": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "bottomLeft": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "bottomCenter": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        },
        "bottomRight": {
            "x": {},
            "y": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addVectors": function () {},
            "addScalar": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiplyScalar": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "normalize": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {}
        }
    },
    "Texture": function () {},
    "TextureIdCount": {},
    "CompressedTexture": function () {},
    "DataTexture": function () {},
    "Particle": function () {},
    "ParticleSystem": function () {},
    "Line": function () {},
    "LineStrip": {},
    "LinePieces": {},
    "Mesh": function () {},
    "Bone": function () {},
    "SkinnedMesh": function () {},
    "MorphAnimMesh": function () {},
    "Ribbon": function () {},
    "LOD": function () {},
    "Sprite": function () {},
    "Scene": function () {},
    "Fog": function () {},
    "FogExp2": function () {},
    "CanvasRenderer": function () {},
    "ShaderChunk": {
        "fog_pars_fragment": {},
        "fog_fragment": {},
        "envmap_pars_fragment": {},
        "envmap_fragment": {},
        "envmap_pars_vertex": {},
        "worldpos_vertex": {},
        "envmap_vertex": {},
        "map_particle_pars_fragment": {},
        "map_particle_fragment": {},
        "map_pars_vertex": {},
        "map_pars_fragment": {},
        "map_vertex": {},
        "map_fragment": {},
        "lightmap_pars_fragment": {},
        "lightmap_pars_vertex": {},
        "lightmap_fragment": {},
        "lightmap_vertex": {},
        "bumpmap_pars_fragment": {},
        "normalmap_pars_fragment": {},
        "specularmap_pars_fragment": {},
        "specularmap_fragment": {},
        "lights_lambert_pars_vertex": {},
        "lights_lambert_vertex": {},
        "lights_phong_pars_vertex": {},
        "lights_phong_vertex": {},
        "lights_phong_pars_fragment": {},
        "lights_phong_fragment": {},
        "color_pars_fragment": {},
        "color_fragment": {},
        "color_pars_vertex": {},
        "color_vertex": {},
        "skinning_pars_vertex": {},
        "skinbase_vertex": {},
        "skinning_vertex": {},
        "morphtarget_pars_vertex": {},
        "morphtarget_vertex": {},
        "default_vertex": {},
        "morphnormal_vertex": {},
        "skinnormal_vertex": {},
        "defaultnormal_vertex": {},
        "shadowmap_pars_fragment": {},
        "shadowmap_fragment": {},
        "shadowmap_pars_vertex": {},
        "shadowmap_vertex": {},
        "alphatest_fragment": {},
        "linear_to_gamma_fragment": {}
    },
    "UniformsUtils": {
        "merge": function () {},
        "clone": function () {}
    },
    "UniformsLib": {
        "common": {
            "diffuse": {
                "type": {},
                "value": {
                    "r": {},
                    "g": {},
                    "b": {},
                    "constructor": function () {},
                    "set": function () {},
                    "setHex": function () {},
                    "setRGB": function () {},
                    "setHSL": function () {},
                    "setStyle": function () {},
                    "copy": function () {},
                    "copyGammaToLinear": function () {},
                    "copyLinearToGamma": function () {},
                    "convertGammaToLinear": function () {},
                    "convertLinearToGamma": function () {},
                    "getHex": function () {},
                    "getHexString": function () {},
                    "getHSL": function () {},
                    "getStyle": function () {},
                    "offsetHSL": function () {},
                    "add": function () {},
                    "addColors": function () {},
                    "addScalar": function () {},
                    "multiply": function () {},
                    "multiplyScalar": function () {},
                    "lerp": function () {},
                    "equals": function () {},
                    "clone": function () {}
                }
            },
            "opacity": {
                "type": {},
                "value": {}
            },
            "map": {
                "type": {},
                "value": function () {}
            },
            "offsetRepeat": {
                "type": {},
                "value": {
                    "x": {},
                    "y": {},
                    "z": {},
                    "w": {},
                    "constructor": function () {},
                    "set": function () {},
                    "setX": function () {},
                    "setY": function () {},
                    "setZ": function () {},
                    "setW": function () {},
                    "setComponent": function () {},
                    "getComponent": function () {},
                    "copy": function () {},
                    "add": function () {},
                    "addScalar": function () {},
                    "addVectors": function () {},
                    "sub": function () {},
                    "subVectors": function () {},
                    "multiplyScalar": function () {},
                    "applyMatrix4": function () {},
                    "divideScalar": function () {},
                    "setAxisAngleFromQuaternion": function () {},
                    "setAxisAngleFromRotationMatrix": function () {},
                    "min": function () {},
                    "max": function () {},
                    "clamp": function () {},
                    "negate": function () {},
                    "dot": function () {},
                    "lengthSq": function () {},
                    "length": function () {},
                    "lengthManhattan": function () {},
                    "normalize": function () {},
                    "setLength": function () {},
                    "lerp": function () {},
                    "equals": function () {},
                    "toArray": function () {},
                    "clone": function () {}
                }
            },
            "lightMap": {
                "type": {},
                "value": function () {}
            },
            "specularMap": {
                "type": {},
                "value": function () {}
            },
            "envMap": {
                "type": {},
                "value": function () {}
            },
            "flipEnvMap": {
                "type": {},
                "value": {}
            },
            "useRefract": {
                "type": {},
                "value": {}
            },
            "reflectivity": {
                "type": {},
                "value": {}
            },
            "refractionRatio": {
                "type": {},
                "value": {}
            },
            "combine": {
                "type": {},
                "value": {}
            },
            "morphTargetInfluences": {
                "type": {},
                "value": {}
            }
        },
        "bump": {
            "bumpMap": {
                "type": {},
                "value": function () {}
            },
            "bumpScale": {
                "type": {},
                "value": {}
            }
        },
        "normalmap": {
            "normalMap": {
                "type": {},
                "value": function () {}
            },
            "normalScale": {
                "type": {},
                "value": {
                    "x": {},
                    "y": {},
                    "constructor": function () {},
                    "set": function () {},
                    "setX": function () {},
                    "setY": function () {},
                    "setComponent": function () {},
                    "getComponent": function () {},
                    "copy": function () {},
                    "add": function () {},
                    "addVectors": function () {},
                    "addScalar": function () {},
                    "sub": function () {},
                    "subVectors": function () {},
                    "multiplyScalar": function () {},
                    "divideScalar": function () {},
                    "min": function () {},
                    "max": function () {},
                    "clamp": function () {},
                    "negate": function () {},
                    "dot": function () {},
                    "lengthSq": function () {},
                    "length": function () {},
                    "normalize": function () {},
                    "distanceTo": function () {},
                    "distanceToSquared": function () {},
                    "setLength": function () {},
                    "lerp": function () {},
                    "equals": function () {},
                    "toArray": function () {},
                    "clone": function () {}
                }
            }
        },
        "fog": {
            "fogDensity": {
                "type": {},
                "value": {}
            },
            "fogNear": {
                "type": {},
                "value": {}
            },
            "fogFar": {
                "type": {},
                "value": {}
            },
            "fogColor": {
                "type": {},
                "value": {
                    "r": {},
                    "g": {},
                    "b": {},
                    "constructor": function () {},
                    "set": function () {},
                    "setHex": function () {},
                    "setRGB": function () {},
                    "setHSL": function () {},
                    "setStyle": function () {},
                    "copy": function () {},
                    "copyGammaToLinear": function () {},
                    "copyLinearToGamma": function () {},
                    "convertGammaToLinear": function () {},
                    "convertLinearToGamma": function () {},
                    "getHex": function () {},
                    "getHexString": function () {},
                    "getHSL": function () {},
                    "getStyle": function () {},
                    "offsetHSL": function () {},
                    "add": function () {},
                    "addColors": function () {},
                    "addScalar": function () {},
                    "multiply": function () {},
                    "multiplyScalar": function () {},
                    "lerp": function () {},
                    "equals": function () {},
                    "clone": function () {}
                }
            }
        },
        "lights": {
            "ambientLightColor": {
                "type": {},
                "value": function () {}
            },
            "directionalLightDirection": {
                "type": {},
                "value": function () {}
            },
            "directionalLightColor": {
                "type": {},
                "value": function () {}
            },
            "hemisphereLightDirection": {
                "type": {},
                "value": function () {}
            },
            "hemisphereLightSkyColor": {
                "type": {},
                "value": function () {}
            },
            "hemisphereLightGroundColor": {
                "type": {},
                "value": function () {}
            },
            "pointLightColor": {
                "type": {},
                "value": function () {}
            },
            "pointLightPosition": {
                "type": {},
                "value": function () {}
            },
            "pointLightDistance": {
                "type": {},
                "value": function () {}
            },
            "spotLightColor": {
                "type": {},
                "value": function () {}
            },
            "spotLightPosition": {
                "type": {},
                "value": function () {}
            },
            "spotLightDirection": {
                "type": {},
                "value": function () {}
            },
            "spotLightDistance": {
                "type": {},
                "value": function () {}
            },
            "spotLightAngleCos": {
                "type": {},
                "value": function () {}
            },
            "spotLightExponent": {
                "type": {},
                "value": function () {}
            }
        },
        "particle": {
            "psColor": {
                "type": {},
                "value": {
                    "r": {},
                    "g": {},
                    "b": {},
                    "constructor": function () {},
                    "set": function () {},
                    "setHex": function () {},
                    "setRGB": function () {},
                    "setHSL": function () {},
                    "setStyle": function () {},
                    "copy": function () {},
                    "copyGammaToLinear": function () {},
                    "copyLinearToGamma": function () {},
                    "convertGammaToLinear": function () {},
                    "convertLinearToGamma": function () {},
                    "getHex": function () {},
                    "getHexString": function () {},
                    "getHSL": function () {},
                    "getStyle": function () {},
                    "offsetHSL": function () {},
                    "add": function () {},
                    "addColors": function () {},
                    "addScalar": function () {},
                    "multiply": function () {},
                    "multiplyScalar": function () {},
                    "lerp": function () {},
                    "equals": function () {},
                    "clone": function () {}
                }
            },
            "opacity": {
                "type": {},
                "value": {}
            },
            "size": {
                "type": {},
                "value": {}
            },
            "scale": {
                "type": {},
                "value": {}
            },
            "map": {
                "type": {},
                "value": function () {}
            },
            "fogDensity": {
                "type": {},
                "value": {}
            },
            "fogNear": {
                "type": {},
                "value": {}
            },
            "fogFar": {
                "type": {},
                "value": {}
            },
            "fogColor": {
                "type": {},
                "value": {
                    "r": {},
                    "g": {},
                    "b": {},
                    "constructor": function () {},
                    "set": function () {},
                    "setHex": function () {},
                    "setRGB": function () {},
                    "setHSL": function () {},
                    "setStyle": function () {},
                    "copy": function () {},
                    "copyGammaToLinear": function () {},
                    "copyLinearToGamma": function () {},
                    "convertGammaToLinear": function () {},
                    "convertLinearToGamma": function () {},
                    "getHex": function () {},
                    "getHexString": function () {},
                    "getHSL": function () {},
                    "getStyle": function () {},
                    "offsetHSL": function () {},
                    "add": function () {},
                    "addColors": function () {},
                    "addScalar": function () {},
                    "multiply": function () {},
                    "multiplyScalar": function () {},
                    "lerp": function () {},
                    "equals": function () {},
                    "clone": function () {}
                }
            }
        },
        "shadowmap": {
            "shadowMap": {
                "type": {},
                "value": function () {}
            },
            "shadowMapSize": {
                "type": {},
                "value": function () {}
            },
            "shadowBias": {
                "type": {},
                "value": function () {}
            },
            "shadowDarkness": {
                "type": {},
                "value": function () {}
            },
            "shadowMatrix": {
                "type": {},
                "value": function () {}
            }
        }
    },
    "ShaderLib": {
        "basic": {
            "uniforms": {
                "diffuse": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "opacity": {
                    "type": {},
                    "value": {}
                },
                "map": {
                    "type": {},
                    "value": function () {}
                },
                "offsetRepeat": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "w": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setW": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "applyMatrix4": function () {},
                        "divideScalar": function () {},
                        "setAxisAngleFromQuaternion": function () {},
                        "setAxisAngleFromRotationMatrix": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "lightMap": {
                    "type": {},
                    "value": function () {}
                },
                "specularMap": {
                    "type": {},
                    "value": function () {}
                },
                "envMap": {
                    "type": {},
                    "value": function () {}
                },
                "flipEnvMap": {
                    "type": {},
                    "value": {}
                },
                "useRefract": {
                    "type": {},
                    "value": {}
                },
                "reflectivity": {
                    "type": {},
                    "value": {}
                },
                "refractionRatio": {
                    "type": {},
                    "value": {}
                },
                "combine": {
                    "type": {},
                    "value": {}
                },
                "morphTargetInfluences": {
                    "type": {},
                    "value": {}
                },
                "fogDensity": {
                    "type": {},
                    "value": {}
                },
                "fogNear": {
                    "type": {},
                    "value": {}
                },
                "fogFar": {
                    "type": {},
                    "value": {}
                },
                "fogColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "shadowMap": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMapSize": {
                    "type": {},
                    "value": function () {}
                },
                "shadowBias": {
                    "type": {},
                    "value": function () {}
                },
                "shadowDarkness": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMatrix": {
                    "type": {},
                    "value": function () {}
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "lambert": {
            "uniforms": {
                "diffuse": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "opacity": {
                    "type": {},
                    "value": {}
                },
                "map": {
                    "type": {},
                    "value": function () {}
                },
                "offsetRepeat": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "w": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setW": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "applyMatrix4": function () {},
                        "divideScalar": function () {},
                        "setAxisAngleFromQuaternion": function () {},
                        "setAxisAngleFromRotationMatrix": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "lightMap": {
                    "type": {},
                    "value": function () {}
                },
                "specularMap": {
                    "type": {},
                    "value": function () {}
                },
                "envMap": {
                    "type": {},
                    "value": function () {}
                },
                "flipEnvMap": {
                    "type": {},
                    "value": {}
                },
                "useRefract": {
                    "type": {},
                    "value": {}
                },
                "reflectivity": {
                    "type": {},
                    "value": {}
                },
                "refractionRatio": {
                    "type": {},
                    "value": {}
                },
                "combine": {
                    "type": {},
                    "value": {}
                },
                "morphTargetInfluences": {
                    "type": {},
                    "value": {}
                },
                "fogDensity": {
                    "type": {},
                    "value": {}
                },
                "fogNear": {
                    "type": {},
                    "value": {}
                },
                "fogFar": {
                    "type": {},
                    "value": {}
                },
                "fogColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "ambientLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "directionalLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "directionalLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightSkyColor": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightGroundColor": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightPosition": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightDistance": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightPosition": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightDistance": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightAngleCos": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightExponent": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMap": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMapSize": {
                    "type": {},
                    "value": function () {}
                },
                "shadowBias": {
                    "type": {},
                    "value": function () {}
                },
                "shadowDarkness": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMatrix": {
                    "type": {},
                    "value": function () {}
                },
                "ambient": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "emissive": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "wrapRGB": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "multiplyVectors": function () {},
                        "applyMatrix3": function () {},
                        "applyMatrix4": function () {},
                        "applyProjection": function () {},
                        "applyQuaternion": function () {},
                        "transformDirection": function () {},
                        "divide": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "cross": function () {},
                        "crossVectors": function () {},
                        "angleTo": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setEulerFromRotationMatrix": function () {},
                        "setEulerFromQuaternion": function () {},
                        "getPositionFromMatrix": function () {},
                        "getScaleFromMatrix": function () {},
                        "getColumnFromMatrix": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {},
                        "applyEuler": function () {},
                        "applyAxisAngle": function () {},
                        "projectOnVector": function () {},
                        "projectOnPlane": function () {},
                        "reflect": function () {}
                    }
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "phong": {
            "uniforms": {
                "diffuse": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "opacity": {
                    "type": {},
                    "value": {}
                },
                "map": {
                    "type": {},
                    "value": function () {}
                },
                "offsetRepeat": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "w": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setW": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "applyMatrix4": function () {},
                        "divideScalar": function () {},
                        "setAxisAngleFromQuaternion": function () {},
                        "setAxisAngleFromRotationMatrix": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "lightMap": {
                    "type": {},
                    "value": function () {}
                },
                "specularMap": {
                    "type": {},
                    "value": function () {}
                },
                "envMap": {
                    "type": {},
                    "value": function () {}
                },
                "flipEnvMap": {
                    "type": {},
                    "value": {}
                },
                "useRefract": {
                    "type": {},
                    "value": {}
                },
                "reflectivity": {
                    "type": {},
                    "value": {}
                },
                "refractionRatio": {
                    "type": {},
                    "value": {}
                },
                "combine": {
                    "type": {},
                    "value": {}
                },
                "morphTargetInfluences": {
                    "type": {},
                    "value": {}
                },
                "bumpMap": {
                    "type": {},
                    "value": function () {}
                },
                "bumpScale": {
                    "type": {},
                    "value": {}
                },
                "normalMap": {
                    "type": {},
                    "value": function () {}
                },
                "normalScale": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addVectors": function () {},
                        "addScalar": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "normalize": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "fogDensity": {
                    "type": {},
                    "value": {}
                },
                "fogNear": {
                    "type": {},
                    "value": {}
                },
                "fogFar": {
                    "type": {},
                    "value": {}
                },
                "fogColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "ambientLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "directionalLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "directionalLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightSkyColor": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightGroundColor": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightPosition": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightDistance": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightPosition": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightDistance": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightAngleCos": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightExponent": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMap": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMapSize": {
                    "type": {},
                    "value": function () {}
                },
                "shadowBias": {
                    "type": {},
                    "value": function () {}
                },
                "shadowDarkness": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMatrix": {
                    "type": {},
                    "value": function () {}
                },
                "ambient": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "emissive": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "specular": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "shininess": {
                    "type": {},
                    "value": {}
                },
                "wrapRGB": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "multiplyVectors": function () {},
                        "applyMatrix3": function () {},
                        "applyMatrix4": function () {},
                        "applyProjection": function () {},
                        "applyQuaternion": function () {},
                        "transformDirection": function () {},
                        "divide": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "cross": function () {},
                        "crossVectors": function () {},
                        "angleTo": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setEulerFromRotationMatrix": function () {},
                        "setEulerFromQuaternion": function () {},
                        "getPositionFromMatrix": function () {},
                        "getScaleFromMatrix": function () {},
                        "getColumnFromMatrix": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {},
                        "applyEuler": function () {},
                        "applyAxisAngle": function () {},
                        "projectOnVector": function () {},
                        "projectOnPlane": function () {},
                        "reflect": function () {}
                    }
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "particle_basic": {
            "uniforms": {
                "psColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "opacity": {
                    "type": {},
                    "value": {}
                },
                "size": {
                    "type": {},
                    "value": {}
                },
                "scale": {
                    "type": {},
                    "value": {}
                },
                "map": {
                    "type": {},
                    "value": function () {}
                },
                "fogDensity": {
                    "type": {},
                    "value": {}
                },
                "fogNear": {
                    "type": {},
                    "value": {}
                },
                "fogFar": {
                    "type": {},
                    "value": {}
                },
                "fogColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "shadowMap": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMapSize": {
                    "type": {},
                    "value": function () {}
                },
                "shadowBias": {
                    "type": {},
                    "value": function () {}
                },
                "shadowDarkness": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMatrix": {
                    "type": {},
                    "value": function () {}
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "dashed": {
            "uniforms": {
                "diffuse": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "opacity": {
                    "type": {},
                    "value": {}
                },
                "map": {
                    "type": {},
                    "value": function () {}
                },
                "offsetRepeat": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "w": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setW": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "applyMatrix4": function () {},
                        "divideScalar": function () {},
                        "setAxisAngleFromQuaternion": function () {},
                        "setAxisAngleFromRotationMatrix": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "lightMap": {
                    "type": {},
                    "value": function () {}
                },
                "specularMap": {
                    "type": {},
                    "value": function () {}
                },
                "envMap": {
                    "type": {},
                    "value": function () {}
                },
                "flipEnvMap": {
                    "type": {},
                    "value": {}
                },
                "useRefract": {
                    "type": {},
                    "value": {}
                },
                "reflectivity": {
                    "type": {},
                    "value": {}
                },
                "refractionRatio": {
                    "type": {},
                    "value": {}
                },
                "combine": {
                    "type": {},
                    "value": {}
                },
                "morphTargetInfluences": {
                    "type": {},
                    "value": {}
                },
                "fogDensity": {
                    "type": {},
                    "value": {}
                },
                "fogNear": {
                    "type": {},
                    "value": {}
                },
                "fogFar": {
                    "type": {},
                    "value": {}
                },
                "fogColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "scale": {
                    "type": {},
                    "value": {}
                },
                "dashSize": {
                    "type": {},
                    "value": {}
                },
                "totalSize": {
                    "type": {},
                    "value": {}
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "depth": {
            "uniforms": {
                "mNear": {
                    "type": {},
                    "value": {}
                },
                "mFar": {
                    "type": {},
                    "value": {}
                },
                "opacity": {
                    "type": {},
                    "value": {}
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "normal": {
            "uniforms": {
                "opacity": {
                    "type": {},
                    "value": {}
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "normalmap": {
            "uniforms": {
                "fogDensity": {
                    "type": {},
                    "value": {}
                },
                "fogNear": {
                    "type": {},
                    "value": {}
                },
                "fogFar": {
                    "type": {},
                    "value": {}
                },
                "fogColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "ambientLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "directionalLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "directionalLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightSkyColor": {
                    "type": {},
                    "value": function () {}
                },
                "hemisphereLightGroundColor": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightPosition": {
                    "type": {},
                    "value": function () {}
                },
                "pointLightDistance": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightColor": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightPosition": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightDirection": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightDistance": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightAngleCos": {
                    "type": {},
                    "value": function () {}
                },
                "spotLightExponent": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMap": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMapSize": {
                    "type": {},
                    "value": function () {}
                },
                "shadowBias": {
                    "type": {},
                    "value": function () {}
                },
                "shadowDarkness": {
                    "type": {},
                    "value": function () {}
                },
                "shadowMatrix": {
                    "type": {},
                    "value": function () {}
                },
                "enableAO": {
                    "type": {},
                    "value": {}
                },
                "enableDiffuse": {
                    "type": {},
                    "value": {}
                },
                "enableSpecular": {
                    "type": {},
                    "value": {}
                },
                "enableReflection": {
                    "type": {},
                    "value": {}
                },
                "enableDisplacement": {
                    "type": {},
                    "value": {}
                },
                "tDisplacement": {
                    "type": {},
                    "value": function () {}
                },
                "tDiffuse": {
                    "type": {},
                    "value": function () {}
                },
                "tCube": {
                    "type": {},
                    "value": function () {}
                },
                "tNormal": {
                    "type": {},
                    "value": function () {}
                },
                "tSpecular": {
                    "type": {},
                    "value": function () {}
                },
                "tAO": {
                    "type": {},
                    "value": function () {}
                },
                "uNormalScale": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addVectors": function () {},
                        "addScalar": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "normalize": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "uDisplacementBias": {
                    "type": {},
                    "value": {}
                },
                "uDisplacementScale": {
                    "type": {},
                    "value": {}
                },
                "uDiffuseColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "uSpecularColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "uAmbientColor": {
                    "type": {},
                    "value": {
                        "r": {},
                        "g": {},
                        "b": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setHex": function () {},
                        "setRGB": function () {},
                        "setHSL": function () {},
                        "setStyle": function () {},
                        "copy": function () {},
                        "copyGammaToLinear": function () {},
                        "copyLinearToGamma": function () {},
                        "convertGammaToLinear": function () {},
                        "convertLinearToGamma": function () {},
                        "getHex": function () {},
                        "getHexString": function () {},
                        "getHSL": function () {},
                        "getStyle": function () {},
                        "offsetHSL": function () {},
                        "add": function () {},
                        "addColors": function () {},
                        "addScalar": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "clone": function () {}
                    }
                },
                "uShininess": {
                    "type": {},
                    "value": {}
                },
                "uOpacity": {
                    "type": {},
                    "value": {}
                },
                "useRefract": {
                    "type": {},
                    "value": {}
                },
                "uRefractionRatio": {
                    "type": {},
                    "value": {}
                },
                "uReflectivity": {
                    "type": {},
                    "value": {}
                },
                "uOffset": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addVectors": function () {},
                        "addScalar": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "normalize": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "uRepeat": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addVectors": function () {},
                        "addScalar": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiplyScalar": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "normalize": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {}
                    }
                },
                "wrapRGB": {
                    "type": {},
                    "value": {
                        "x": {},
                        "y": {},
                        "z": {},
                        "constructor": function () {},
                        "set": function () {},
                        "setX": function () {},
                        "setY": function () {},
                        "setZ": function () {},
                        "setComponent": function () {},
                        "getComponent": function () {},
                        "copy": function () {},
                        "add": function () {},
                        "addScalar": function () {},
                        "addVectors": function () {},
                        "sub": function () {},
                        "subVectors": function () {},
                        "multiply": function () {},
                        "multiplyScalar": function () {},
                        "multiplyVectors": function () {},
                        "applyMatrix3": function () {},
                        "applyMatrix4": function () {},
                        "applyProjection": function () {},
                        "applyQuaternion": function () {},
                        "transformDirection": function () {},
                        "divide": function () {},
                        "divideScalar": function () {},
                        "min": function () {},
                        "max": function () {},
                        "clamp": function () {},
                        "negate": function () {},
                        "dot": function () {},
                        "lengthSq": function () {},
                        "length": function () {},
                        "lengthManhattan": function () {},
                        "normalize": function () {},
                        "setLength": function () {},
                        "lerp": function () {},
                        "cross": function () {},
                        "crossVectors": function () {},
                        "angleTo": function () {},
                        "distanceTo": function () {},
                        "distanceToSquared": function () {},
                        "setEulerFromRotationMatrix": function () {},
                        "setEulerFromQuaternion": function () {},
                        "getPositionFromMatrix": function () {},
                        "getScaleFromMatrix": function () {},
                        "getColumnFromMatrix": function () {},
                        "equals": function () {},
                        "toArray": function () {},
                        "clone": function () {},
                        "applyEuler": function () {},
                        "applyAxisAngle": function () {},
                        "projectOnVector": function () {},
                        "projectOnPlane": function () {},
                        "reflect": function () {}
                    }
                }
            },
            "fragmentShader": {},
            "vertexShader": {}
        },
        "cube": {
            "uniforms": {
                "tCube": {
                    "type": {},
                    "value": function () {}
                },
                "tFlip": {
                    "type": {},
                    "value": {}
                }
            },
            "vertexShader": {},
            "fragmentShader": {}
        },
        "depthRGBA": {
            "uniforms": function () {},
            "vertexShader": {},
            "fragmentShader": {}
        }
    },
    "WebGLRenderer": function () {},
    "WebGLRenderTarget": function () {},
    "WebGLRenderTargetCube": function () {},
    "RenderableVertex": function () {},
    "RenderableFace3": function () {},
    "RenderableFace4": function () {},
    "RenderableObject": function () {},
    "RenderableParticle": function () {},
    "RenderableLine": function () {},
    "GeometryUtils": {
        "merge": function () {},
        "removeMaterials": function () {},
        "randomPointInTriangle": function () {},
        "randomPointInFace": function () {},
        "randomPointsInGeometry": function () {},
        "triangleArea": function () {},
        "center": function () {},
        "normalizeUVs": function () {},
        "triangulateQuads": function () {},
        "setMaterialIndex": function () {},
        "random": function () {},
        "__v1": {
            "x": {},
            "y": {},
            "z": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setZ": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addScalar": function () {},
            "addVectors": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiply": function () {},
            "multiplyScalar": function () {},
            "multiplyVectors": function () {},
            "applyMatrix3": function () {},
            "applyMatrix4": function () {},
            "applyProjection": function () {},
            "applyQuaternion": function () {},
            "transformDirection": function () {},
            "divide": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "lengthManhattan": function () {},
            "normalize": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "cross": function () {},
            "crossVectors": function () {},
            "angleTo": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setEulerFromRotationMatrix": function () {},
            "setEulerFromQuaternion": function () {},
            "getPositionFromMatrix": function () {},
            "getScaleFromMatrix": function () {},
            "getColumnFromMatrix": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {},
            "applyEuler": function () {},
            "applyAxisAngle": function () {},
            "projectOnVector": function () {},
            "projectOnPlane": function () {},
            "reflect": function () {}
        },
        "__v2": {
            "x": {},
            "y": {},
            "z": {},
            "constructor": function () {},
            "set": function () {},
            "setX": function () {},
            "setY": function () {},
            "setZ": function () {},
            "setComponent": function () {},
            "getComponent": function () {},
            "copy": function () {},
            "add": function () {},
            "addScalar": function () {},
            "addVectors": function () {},
            "sub": function () {},
            "subVectors": function () {},
            "multiply": function () {},
            "multiplyScalar": function () {},
            "multiplyVectors": function () {},
            "applyMatrix3": function () {},
            "applyMatrix4": function () {},
            "applyProjection": function () {},
            "applyQuaternion": function () {},
            "transformDirection": function () {},
            "divide": function () {},
            "divideScalar": function () {},
            "min": function () {},
            "max": function () {},
            "clamp": function () {},
            "negate": function () {},
            "dot": function () {},
            "lengthSq": function () {},
            "length": function () {},
            "lengthManhattan": function () {},
            "normalize": function () {},
            "setLength": function () {},
            "lerp": function () {},
            "cross": function () {},
            "crossVectors": function () {},
            "angleTo": function () {},
            "distanceTo": function () {},
            "distanceToSquared": function () {},
            "setEulerFromRotationMatrix": function () {},
            "setEulerFromQuaternion": function () {},
            "getPositionFromMatrix": function () {},
            "getScaleFromMatrix": function () {},
            "getColumnFromMatrix": function () {},
            "equals": function () {},
            "toArray": function () {},
            "clone": function () {},
            "applyEuler": function () {},
            "applyAxisAngle": function () {},
            "projectOnVector": function () {},
            "projectOnPlane": function () {},
            "reflect": function () {}
        }
    },
    "ImageUtils": {
        "crossOrigin": {},
        "loadTexture": function () {},
        "loadCompressedTexture": function () {},
        "loadTextureCube": function () {},
        "loadCompressedTextureCube": function () {},
        "parseDDS": function () {},
        "getNormalMap": function () {},
        "generateDataTexture": function () {}
    },
    "SceneUtils": {
        "createMultiMaterialObject": function () {},
        "detach": function () {},
        "attach": function () {}
    },
    "FontUtils": {
        "faces": function () {},
        "face": {},
        "weight": {},
        "style": {},
        "size": {},
        "divisions": {},
        "getFace": function () {},
        "loadFace": function () {},
        "drawText": function () {},
        "extractGlyphPoints": function () {},
        "generateShapes": function () {},
        "Triangulate": function () {}
    },
    "Curve": function () {},
    "LineCurve": function () {},
    "QuadraticBezierCurve": function () {},
    "CubicBezierCurve": function () {},
    "SplineCurve": function () {},
    "EllipseCurve": function () {},
    "ArcCurve": function () {},
    "LineCurve3": function () {},
    "QuadraticBezierCurve3": function () {},
    "CubicBezierCurve3": function () {},
    "SplineCurve3": function () {},
    "ClosedSplineCurve3": function () {},
    "CurvePath": function () {},
    "Gyroscope": function () {},
    "Path": function () {},
    "PathActions": {
        "MOVE_TO": {},
        "LINE_TO": {},
        "QUADRATIC_CURVE_TO": {},
        "BEZIER_CURVE_TO": {},
        "CSPLINE_THRU": {},
        "ARC": {},
        "ELLIPSE": {}
    },
    "Shape": function () {},
    "AnimationHandler": {
        "update": function () {},
        "addToUpdate": function () {},
        "removeFromUpdate": function () {},
        "add": function () {},
        "get": function () {},
        "parse": function () {},
        "LINEAR": {},
        "CATMULLROM": {},
        "CATMULLROM_FORWARD": {}
    },
    "Animation": function () {},
    "KeyFrameAnimation": function () {},
    "CubeCamera": function () {},
    "CombinedCamera": function () {},
    "CircleGeometry": function () {},
    "CubeGeometry": function () {},
    "CylinderGeometry": function () {},
    "ExtrudeGeometry": function () {},
    "ShapeGeometry": function () {},
    "LatheGeometry": function () {},
    "PlaneGeometry": function () {},
    "RingGeometry": function () {},
    "SphereGeometry": function () {},
    "TextGeometry": function () {},
    "TorusGeometry": function () {},
    "TorusKnotGeometry": function () {},
    "TubeGeometry": function () {},
    "PolyhedronGeometry": function () {},
    "IcosahedronGeometry": function () {},
    "OctahedronGeometry": function () {},
    "TetrahedronGeometry": function () {},
    "ParametricGeometry": function () {},
    "ConvexGeometry": function () {},
    "AxisHelper": function () {},
    "ArrowHelper": function () {},
    "CameraHelper": function () {},
    "DirectionalLightHelper": function () {},
    "GridHelper": function () {},
    "HemisphereLightHelper": function () {},
    "PointLightHelper": function () {},
    "SpotLightHelper": function () {},
    "ImmediateRenderObject": function () {},
    "LensFlare": function () {},
    "MorphBlendMesh": function () {},
    "LensFlarePlugin": function () {},
    "ShadowMapPlugin": function () {},
    "SpritePlugin": function () {},
    "DepthPassPlugin": function () {},
    "ShaderFlares": {
        "lensFlareVertexTexture": {
            "vertexShader": {},
            "fragmentShader": {}
        },
        "lensFlare": {
            "vertexShader": {},
            "fragmentShader": {}
        }
    },
    "ShaderSprite": {
        "sprite": {
            "vertexShader": {},
            "fragmentShader": {}
        }
    }
}

/*
 * Partial type information for THREE.js
 *
 * ORIGINAL SOURCE: https://github.com/crobi/ColladaAnimationCompress/blob/master/threejs-exports.js
 */

/**
 * @constructor
 * @param {?number=} n11 
 * @param {?number=} n12
 * @param {?number=} n13
 * @param {?number=} n14
 * @param {?number=} n21
 * @param {?number=} n22
 * @param {?number=} n23
 * @param {?number=} n24
 * @param {?number=} n31
 * @param {?number=} n32
 * @param {?number=} n33
 * @param {?number=} n34
 * @param {?number=} n41
 * @param {?number=} n42
 * @param {?number=} n43
 * @param {?number=} n44
 */
THREE.Matrix4 = function( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ){};

/**
 * @param {THREE.Matrix4} matrix
 * @return {THREE.Matrix4}
 */
THREE.Matrix4.prototype.getInverse = function(matrix){};

/**
 * @param {THREE.Vector3} axis
 * @param {number} angle
 */
THREE.Matrix4.prototype.makeRotationAxis = function(axis,angle){};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 */
THREE.Matrix4.prototype.makeTranslation = function(x,y,z){};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 */
THREE.Matrix4.prototype.makeScale = function(x,y,z){};

/**
 * @param {THREE.Matrix4} a
 * @param {THREE.Matrix4} b
 * @return {THREE.Matrix4}
 */
THREE.Matrix4.prototype.multiplyMatrices = function(a,b){};

/**
 * @param {THREE.Vector3} v
 */
THREE.Matrix4.prototype.multiplyVector3 = function(v){};

/**
 * @param {number} y
 * @param {number} a
 * @param {number} n
 * @param {number} f
 */
THREE.Matrix4.prototype.makePerspective = function(y,a,n,f){};

/**
 * @param {number} l
 * @param {number} r
 * @param {number} t
 * @param {number} b
 * @param {number} n
 * @param {number} f
 */
THREE.Matrix4.prototype.makeOrthographic = function(l,r,t,b,n,f){};

/**
 * @constructor
 */
THREE.Frustum = function(){};

/**
 * @param {THREE.Matrix4} matrix
 */
THREE.Frustum.prototype.setFromMatrix = function(matrix){};

/**
 * @param {THREE.Object3D} object
 * @return {boolean}
 */
THREE.Frustum.prototype.intersectsObject = function(object){};

/**
@constructor
@param {?number=} x
@param {?number=} y
@param {?number=} z
*/
THREE.Vector3 = function(x,y,z){};

/** @type {number} */
THREE.Vector3.prototype.x;

/** @type {number} */
THREE.Vector3.prototype.y;

/** @type {number} */
THREE.Vector3.prototype.z;

/**
@param {THREE.Vector3} v
*/
THREE.Vector3.prototype.copy = function(v){};

/**
@param {number} s
*/
THREE.Vector3.prototype.multiplyScalar = function(s){};

/**
@param {THREE.Matrix4} m
*/
THREE.Vector3.prototype.applyMatrix4 = function(m){};

/**
@param {THREE.Vector3} v
*/
THREE.Vector3.prototype.addSelf = function(v){};

/** @param {THREE.Vector3} v */
THREE.Vector3.prototype.sub = function(v) {};

/**
 * @param {THREE.Vector3} a
 * @param {THREE.Vector3} b
 */
THREE.Vector3.prototype.crossVectors = function(a, b) {};

/**
 * @param {THREE.Vector3} v
 * @return {number}
 */
THREE.Vector3.prototype.dot = function(v) {};

THREE.Vector3.prototype.normalize = function() {};

/**
 * @constructor
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_z
 * @param {number=} opt_w
 */
THREE.Quaternion = function(opt_x, opt_y, opt_z, opt_w) {};

/**
@param {THREE.Quaternion} q
*/
THREE.Quaternion.prototype.copy = function(q){};

/**
 * @param {THREE.Vector3} axis
 * @param {number} angle
 */
THREE.Quaternion.prototype.setFromAxisAngle = function(axis, angle) {};


/**
 * @param {THREE.Euler} euler
 */
THREE.Quaternion.prototype.setFromEuler = function(euler) {};

THREE.Quaternion.prototype.normalize = function() {};

/**
 * @param {THREE.Quaternion} a
 * @param {THREE.Quaternion} b
 */
THREE.Quaternion.prototype.multiplyQuaternions = function(a, b) {};

/**
 * @param {THREE.Quaternion} b
 * @return {THREE.Quaternion}
 */
THREE.Quaternion.prototype.multiply = function(b) {};

/**
 * @param {THREE.Quaternion} qb
 * @param {number} t
 */
THREE.Quaternion.prototype.slerp = function(qb, t) {};

/**
 * @constructor
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_z
 * @param {string=} opt_order
 */
THREE.Euler = function(opt_x, opt_y, opt_z, opt_order) {};

/**
 * @param {THREE.Quaternion} q
 * @param {string=} opt_order
 */
THREE.Euler.prototype.setFromQuaternion = function(q, opt_order) {};

/**
@constructor
@param {?number=} x
@param {?number=} y
*/
THREE.Vector2 = function(x,y){};

/**
 * @constructor
 * @param {number=} h
 */
THREE.Color = function(h){};

/**
@param {string} h
*/
THREE.Color.prototype.setHex = function(h){};

/**
@param {number} r
@param {number} g
@param {number} b
*/
THREE.Color.prototype.setRGB = function(r,g,b){};

/**
@constructor
@param {number} v1
@param {number} v2
@param {number} v3
@param {THREE.Vector3|Array.<THREE.Vector3>=} n
@param {THREE.Color|Array.<THREE.Color>=} c
*/
THREE.Face3 = function(v1,v2,v3,n,c){};


THREE.ShaderUtils = {};

THREE.ShaderUtils.lib = {};

THREE.UniformsUtils = {};

/**
@param {Object} u
@return Object
*/
THREE.UniformsUtils.clone = function(u){};

THREE.ImageUtils = {};

/**
@param {string} s
@return THREE.Texture
*/
THREE.ImageUtils.loadTexture = function(s){};

/** @constructor */
THREE.Object3D = function(){};

/**
@param {THREE.Object3D} o
*/
THREE.Object3D.prototype.add = function(o){};

/**
@param {THREE.Object3D} o
*/
THREE.Object3D.prototype.remove = function(o){};

THREE.Object3D.prototype.lookAt = function(v){};
THREE.Object3D.prototype.up = function(){};
THREE.Object3D.prototype.scale = function(){};
THREE.Object3D.prototype.position = function(){};
THREE.Object3D.prototype.rotation = function(){};
THREE.Object3D.prototype.updateMatrix = function(){};

/**
@param {boolean} force
*/
THREE.Object3D.prototype.updateMatrixWorld = function(force){};

/** @type {THREE.Matrix4} */
THREE.Object3D.prototype.matrixWorld;

THREE.Object3D.prototype.visible;
THREE.Object3D.prototype.matrixAutoUpdate;

/**
 * @type {Array.<THREE.Object3D>}
 */
 THREE.Object3D.prototype.children;

/**
@constructor
@extends {THREE.Object3D}
@param {THREE.Geometry} g
@param {THREE.Material|THREE.MeshFaceMaterial} m
*/
THREE.MorphAnimMesh = function(g,m){};

THREE.MorphAnimMesh.prototype.setDirectionForward = function() {};
THREE.MorphAnimMesh.prototype.setDirectionBackward = function() {};

/**
 * @param {number} start
 * @param {number} end
 */
THREE.MorphAnimMesh.prototype.setFrameRange = function(start, end) {};

/**
@constructor
@param {THREE.Geometry} g
@param {THREE.Material|THREE.MeshFaceMaterial} m
*/
THREE.SkinnedMesh = function(g,m){};

/**
@constructor
@extends {THREE.Object3D}
@param {THREE.Geometry} g
@param {THREE.Material|THREE.MeshFaceMaterial} m
*/
THREE.Mesh = function(g,m){};

THREE.Mesh.prototype.material;
THREE.Mesh.prototype.geometry;

/** @constructor */
THREE.Geometry = function(){};

THREE.Geometry.prototype.computeFaceNormals = function(){};
THREE.Geometry.prototype.computeVertexNormals = function(){};
THREE.Geometry.prototype.computeMorphNormals = function(){};
THREE.Geometry.prototype.computeCentroids = function(){};
THREE.Geometry.prototype.computeTangents = function(){};
THREE.Geometry.prototype.computeBoundingBox = function(){};

/** @type {Array.<THREE.Vector2>} */
THREE.Geometry.prototype.faceVertexUvs;

/** @type {Array.<THREE.Face3>} */
THREE.Geometry.prototype.faces;

/** @type {Array.<THREE.Vector3>} */
THREE.Geometry.prototype.vertices;

/** @type {Array.<Object>} */
THREE.Geometry.prototype.morphTargets;

/**
@constructor
@param {*} img
*/
THREE.Texture = function(img){};

/** @type {boolean} */
THREE.Texture.flipY;

/** @type {Image} */
THREE.Texture.image;

/** @constructor */
THREE.Material = function(){};

/** @type {THREE.Texture?} */
THREE.Material.bumpMap;

/** @type {THREE.Texture?} */
THREE.Material.normalMap;

/**
 * @constructor
 * @param {Array.<Object>=} materials
 */
THREE.MeshFaceMaterial = function(materials){};

/**
@constructor
@extends {THREE.Material}
@param {*=} p
*/
THREE.ShaderMaterial = function(p){};

/**
@constructor
@extends {THREE.Material}
@param {*=} p
*/
THREE.MeshBasicMaterial = function(p){};

/**
@constructor
@extends {THREE.Material}
@param {*=} p
*/
THREE.MeshPhongMaterial = function(p){};

/**
@constructor
@extends {THREE.Material}
@param {*=} p
*/
THREE.MeshLambertMaterial = function(p){};

/** @const */
THREE.SmoothShading = function(){};

/** @const */
THREE.FlatShading = function(){};

/** @const */
THREE.RepeatWrapping = function(){};

/** @const */
THREE.DoubleSide = function(){};

/**
 * @constructor
 * @param o {Object} WebGL options
 */
THREE.WebGLRenderer = function(o){};

THREE.WebGLRenderer.prototype.autoClear = false;
THREE.WebGLRenderer.prototype.clear = function() {};
THREE.WebGLRenderer.prototype.context = {};
THREE.WebGLRenderer.prototype.render = function(s,c) {};
THREE.WebGLRenderer.prototype.setFaceCulling = function(f,c) {};
THREE.WebGLRenderer.prototype.setSize = function(x,y) {};
THREE.WebGLRenderer.prototype.setViewport = function(x,y,w,h) {};

/** @type {HTMLElement} */
THREE.WebGLRenderer.prototype.domElement;

/**
 * Three.js's default camera
 * @extends {THREE.Object3D}
 * @constructor
 */
THREE.Camera = function(){};

/**
 * @type {THREE.Matrix4}
 */
THREE.Camera.prototype.projectionMatrix;

/**
 * Three.js's scene graph
 * @constructor
 * @extends {THREE.Object3D}
 */
THREE.Scene = function(){};

/**
 * Three.js's light
 * @constructor
 * @param {number=} h
 */
THREE.Light = function(h){};
THREE.Light.prototype.color;
THREE.Light.prototype.visible;

/**
 * Three.js's ambient light
 * @constructor
 * @extends {THREE.Light}
 * @param {number=} h
 */
THREE.AmbientLight = function(h){};

/**
 * Three.js's pointlight
 * @constructor
 * @extends {THREE.Light}
 * @param {number=} h
 */
THREE.PointLight = function(h){};

// Face culling
THREE.CullFaceNone;
THREE.CullFaceBack;
THREE.CullFaceFront;
THREE.CullFaceFrontBack;
THREE.FrontFaceDirectionCW;
THREE.FrontFaceDirectionCCW;

/**
 * Three.js's raycaster
 * @constructor
 * @param {THREE.Vector3} origin
 * @param {THREE.Vector3} direction
 * @param {number=} near
 * @param {number=} far
 */
THREE.Raycaster = function(origin, direction, near, far) {};

/**
 * @param {THREE.Object3D} object
 * @param {boolean} recursive
 * @return {Array}
 */
THREE.Raycaster.prototype.intersectObject = function(object, recursive) {};

/** @constructor */
THREE.Projector = function() {};

/**
 * @param {THREE.Vector3} vector
 * @param {THREE.Camera} camera
 * @return {THREE.Vector3}
 */
THREE.Projector.prototype.unprojectVector = function(vector, camera) {};