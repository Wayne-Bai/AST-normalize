// Generated by CoffeeScript 1.3.3
(function() {

  describe('RecoderUI', function() {
    var CHROME, ui;
    ui = null;
    CHROME = {
      extension: {
        getURL: function(path) {
          return "../" + path;
        }
      }
    };
    beforeEach(function() {
      return ui = new RecorderUI({
        chrome: CHROME
      });
    });
    afterEach(function() {
      return $('body #capycorder').remove();
    });
    describe('#create', function() {
      it('should generate the necessary HTML and append it', function() {
        return expect($('body #capycorder')).toExist();
      });
      return it('should only generate the HTML once', function() {
        ui.create();
        return expect($('body #capycorder').length).toEqual(1);
      });
    });
    describe('#show', function() {
      it('should make .capture-actions visible', function() {
        expect($('body #capycorder .capture-actions')).not.toBeVisible();
        ui.show('capture.actions');
        return expect($('body #capycorder .capture-actions')).toBeVisible();
      });
      it('should make .capture-matchers visible', function() {
        expect($('body #capycorder .capture-matchers')).not.toBeVisible();
        ui.show('capture.matchers');
        return expect($('body #capycorder .capture-matchers')).toBeVisible();
      });
      return it('should make .generate visible', function() {
        expect($('body #capycorder .generate')).not.toBeVisible();
        ui.show('generate');
        return expect($('body #capycorder .generate')).toBeVisible();
      });
    });
    describe('#showNamePrompt', function() {
      it('should trigger #create', function() {
        ui.showNamePrompt();
        return expect($('body #capycorder')).toExist();
      });
      return it('should show name prompt', function() {
        ui.showNamePrompt();
        return expect($('body #capycorder .prompt-name')).toBeVisible();
      });
    });
    return describe('submitting name prompt', function() {
      var $form, callback;
      callback = null;
      $form = null;
      beforeEach(function() {
        callback = jasmine.createSpy();
        ui.showNamePrompt(callback);
        return $form = $('body #capycorder form.prompt-name');
      });
      it('should call the callback when submitted', function() {
        $form.trigger('submit');
        return expect(callback).toHaveBeenCalled();
      });
      it('should call the callback and pass the value of the input', function() {
        $('#capycorder-spec-name').val('foo');
        $form.trigger('submit');
        return expect(callback).toHaveBeenCalledWith('foo');
      });
      return it('should hide the prompt', function() {
        expect($('body #capycorder .prompt-name')).toBeVisible();
        runs(function() {
          return $form.trigger('submit');
        });
        waits(ui.delayToHide * 1000);
        return runs(function() {
          return expect($('body #capycorder .prompt-name')).not.toBeVisible();
        });
      });
    });
  });

}).call(this);
