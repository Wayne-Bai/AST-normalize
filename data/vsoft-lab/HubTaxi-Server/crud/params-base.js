// Generated by CoffeeScript 1.7.1

/*
 Base Query API URL
 */

(function () {
    var BaseParams, Utils, _,
        __bind = function (fn, me) {
            return function () {
                return fn.apply(me, arguments);
            };
        };

    _ = require('underscore');

    Utils = require('../utils/utils').Utils;

    BaseParams = (function () {
        function BaseParams() {
            this.checkReqParamsOk = __bind(this.checkReqParamsOk, this);
            this.getPostValue = __bind(this.getPostValue, this);
            this.getTableName = __bind(this.getTableName, this);
            this.getLimit = __bind(this.getLimit, this);
            this.getOffset = __bind(this.getOffset, this);
            this.getGroup = __bind(this.getGroup, this);
            this.getSort = __bind(this.getSort, this);
            this.getQuery = __bind(this.getQuery, this);
            this.getFilter = __bind(this.getFilter, this);
            this.setReq = __bind(this.setReq, this);
        }

        BaseParams.prototype.createError = function (method) {
            var error;
            error = new Error("Unimplemented " + method);
            return error;
        };

        BaseParams.prototype.setReq = function (req) {
            this.req = req;
        };

        BaseParams.prototype.getFilter = function () {
            throw this.createError('getFilter');
        };

        BaseParams.prototype.getQuery = function () {
            throw this.createError('getQuery');
        };

        BaseParams.prototype.getSort = function () {
            throw this.createError('getSort');
        };

        BaseParams.prototype.getGroup = function () {
            throw this.createError('getGroup');
        };

        BaseParams.prototype.getOffset = function () {
            throw this.createError('getOffset');
        };

        BaseParams.prototype.getLimit = function () {
            throw this.createError('getLimit');
        };

        BaseParams.prototype.getTableName = function () {
            if(this.req.params.collection){
                return Utils.firstUpperCase(this.req.params.collection);
            }

        };

        BaseParams.prototype.getRecordId = function () {
            return this.req.params.id;
        };

        BaseParams.prototype.getPostValue = function () {
            return this.req.body;
        };

        BaseParams.prototype.checkReqParamsOk = function () {
            var collectionName, mutilQuery, databaseName, result;
            result = '';

            collectionName = this.req.params.collection;
            mutilQuery = this.req.params.multiQuery;


            //databaseName = this.req.params.database;
            /*if (databaseName == null) {
             result = 'Database name Undefined';
             }*/

            if (collectionName === null && mutilQuery === null) {
                result = 'Collection name Undefined';
            }
            return result;
        };
        BaseParams.prototype.getMultiQuery = function () {
            var multiCollection, result;
            result = '';
            multiCollection = this.req.params.multiQuery;
            if(multiCollection == null) {
                result = 'Multi query Undefined';
            }
            return result;
        };
        return BaseParams;

    })();

    exports.BaseParams = BaseParams;

}).call(this);

//# sourceMappingURL=params-base.map
