// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.ClientBrowserDataChannel = (function(_super) {
    __extends(ClientBrowserDataChannel, _super);

    function ClientBrowserDataChannel(onDataCallback, desiredServer) {
      this.onDataCallback = onDataCallback;
      this.desiredServer = desiredServer;
      this.send = __bind(this.send, this);
      this.onOpen = __bind(this.onOpen, this);
      ClientBrowserDataChannel.__super__.constructor.call(this, this.onDataCallback);
    }

    ClientBrowserDataChannel.prototype.onOpen = function(id) {
      ClientBrowserDataChannel.__super__.onOpen.call(this, id);
      this.connection = this.peer.connect(this.desiredServer, {
        reliable: true
      });
      return this.connection.on("data", this.onData);
    };

    ClientBrowserDataChannel.prototype.send = function(data) {
      return this.connection.send(JSON.stringify(data));
    };

    return ClientBrowserDataChannel;

  })(ClientDataChannel);

}).call(this);
