/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['eventLayoutManager.js']) {
  _$jscoverage['eventLayoutManager.js'] = [];
  _$jscoverage['eventLayoutManager.js'][1] = 0;
  _$jscoverage['eventLayoutManager.js'][2] = 0;
  _$jscoverage['eventLayoutManager.js'][3] = 0;
  _$jscoverage['eventLayoutManager.js'][4] = 0;
  _$jscoverage['eventLayoutManager.js'][5] = 0;
  _$jscoverage['eventLayoutManager.js'][6] = 0;
  _$jscoverage['eventLayoutManager.js'][7] = 0;
  _$jscoverage['eventLayoutManager.js'][8] = 0;
  _$jscoverage['eventLayoutManager.js'][10] = 0;
  _$jscoverage['eventLayoutManager.js'][11] = 0;
  _$jscoverage['eventLayoutManager.js'][12] = 0;
  _$jscoverage['eventLayoutManager.js'][13] = 0;
  _$jscoverage['eventLayoutManager.js'][14] = 0;
  _$jscoverage['eventLayoutManager.js'][16] = 0;
  _$jscoverage['eventLayoutManager.js'][18] = 0;
  _$jscoverage['eventLayoutManager.js'][19] = 0;
  _$jscoverage['eventLayoutManager.js'][20] = 0;
  _$jscoverage['eventLayoutManager.js'][23] = 0;
  _$jscoverage['eventLayoutManager.js'][24] = 0;
  _$jscoverage['eventLayoutManager.js'][25] = 0;
  _$jscoverage['eventLayoutManager.js'][26] = 0;
  _$jscoverage['eventLayoutManager.js'][27] = 0;
  _$jscoverage['eventLayoutManager.js'][28] = 0;
  _$jscoverage['eventLayoutManager.js'][29] = 0;
  _$jscoverage['eventLayoutManager.js'][31] = 0;
  _$jscoverage['eventLayoutManager.js'][32] = 0;
  _$jscoverage['eventLayoutManager.js'][33] = 0;
  _$jscoverage['eventLayoutManager.js'][34] = 0;
  _$jscoverage['eventLayoutManager.js'][35] = 0;
  _$jscoverage['eventLayoutManager.js'][36] = 0;
  _$jscoverage['eventLayoutManager.js'][37] = 0;
  _$jscoverage['eventLayoutManager.js'][38] = 0;
  _$jscoverage['eventLayoutManager.js'][39] = 0;
  _$jscoverage['eventLayoutManager.js'][40] = 0;
  _$jscoverage['eventLayoutManager.js'][41] = 0;
  _$jscoverage['eventLayoutManager.js'][43] = 0;
  _$jscoverage['eventLayoutManager.js'][45] = 0;
  _$jscoverage['eventLayoutManager.js'][46] = 0;
  _$jscoverage['eventLayoutManager.js'][47] = 0;
  _$jscoverage['eventLayoutManager.js'][48] = 0;
  _$jscoverage['eventLayoutManager.js'][49] = 0;
  _$jscoverage['eventLayoutManager.js'][50] = 0;
  _$jscoverage['eventLayoutManager.js'][53] = 0;
  _$jscoverage['eventLayoutManager.js'][54] = 0;
  _$jscoverage['eventLayoutManager.js'][56] = 0;
  _$jscoverage['eventLayoutManager.js'][59] = 0;
  _$jscoverage['eventLayoutManager.js'][60] = 0;
  _$jscoverage['eventLayoutManager.js'][61] = 0;
  _$jscoverage['eventLayoutManager.js'][62] = 0;
  _$jscoverage['eventLayoutManager.js'][64] = 0;
  _$jscoverage['eventLayoutManager.js'][65] = 0;
  _$jscoverage['eventLayoutManager.js'][66] = 0;
  _$jscoverage['eventLayoutManager.js'][67] = 0;
  _$jscoverage['eventLayoutManager.js'][68] = 0;
  _$jscoverage['eventLayoutManager.js'][71] = 0;
  _$jscoverage['eventLayoutManager.js'][73] = 0;
  _$jscoverage['eventLayoutManager.js'][74] = 0;
  _$jscoverage['eventLayoutManager.js'][75] = 0;
  _$jscoverage['eventLayoutManager.js'][76] = 0;
  _$jscoverage['eventLayoutManager.js'][77] = 0;
  _$jscoverage['eventLayoutManager.js'][78] = 0;
  _$jscoverage['eventLayoutManager.js'][79] = 0;
  _$jscoverage['eventLayoutManager.js'][80] = 0;
  _$jscoverage['eventLayoutManager.js'][81] = 0;
  _$jscoverage['eventLayoutManager.js'][82] = 0;
  _$jscoverage['eventLayoutManager.js'][83] = 0;
  _$jscoverage['eventLayoutManager.js'][84] = 0;
  _$jscoverage['eventLayoutManager.js'][85] = 0;
  _$jscoverage['eventLayoutManager.js'][87] = 0;
  _$jscoverage['eventLayoutManager.js'][88] = 0;
  _$jscoverage['eventLayoutManager.js'][90] = 0;
  _$jscoverage['eventLayoutManager.js'][91] = 0;
  _$jscoverage['eventLayoutManager.js'][92] = 0;
  _$jscoverage['eventLayoutManager.js'][93] = 0;
  _$jscoverage['eventLayoutManager.js'][94] = 0;
  _$jscoverage['eventLayoutManager.js'][95] = 0;
  _$jscoverage['eventLayoutManager.js'][96] = 0;
  _$jscoverage['eventLayoutManager.js'][98] = 0;
  _$jscoverage['eventLayoutManager.js'][99] = 0;
  _$jscoverage['eventLayoutManager.js'][100] = 0;
  _$jscoverage['eventLayoutManager.js'][101] = 0;
  _$jscoverage['eventLayoutManager.js'][102] = 0;
  _$jscoverage['eventLayoutManager.js'][103] = 0;
  _$jscoverage['eventLayoutManager.js'][104] = 0;
  _$jscoverage['eventLayoutManager.js'][105] = 0;
  _$jscoverage['eventLayoutManager.js'][106] = 0;
  _$jscoverage['eventLayoutManager.js'][109] = 0;
  _$jscoverage['eventLayoutManager.js'][110] = 0;
  _$jscoverage['eventLayoutManager.js'][113] = 0;
  _$jscoverage['eventLayoutManager.js'][115] = 0;
  _$jscoverage['eventLayoutManager.js'][116] = 0;
  _$jscoverage['eventLayoutManager.js'][117] = 0;
  _$jscoverage['eventLayoutManager.js'][118] = 0;
  _$jscoverage['eventLayoutManager.js'][119] = 0;
  _$jscoverage['eventLayoutManager.js'][120] = 0;
  _$jscoverage['eventLayoutManager.js'][121] = 0;
  _$jscoverage['eventLayoutManager.js'][124] = 0;
  _$jscoverage['eventLayoutManager.js'][126] = 0;
  _$jscoverage['eventLayoutManager.js'][127] = 0;
  _$jscoverage['eventLayoutManager.js'][128] = 0;
  _$jscoverage['eventLayoutManager.js'][129] = 0;
  _$jscoverage['eventLayoutManager.js'][131] = 0;
  _$jscoverage['eventLayoutManager.js'][134] = 0;
}
_$jscoverage['eventLayoutManager.js'][1]++;
(function () {
  _$jscoverage['eventLayoutManager.js'][2]++;
  MKT.EventLayoutManager = (function (config, eventCreator) {
  _$jscoverage['eventLayoutManager.js'][3]++;
  this.config = config;
  _$jscoverage['eventLayoutManager.js'][4]++;
  this.eventCreator = eventCreator;
  _$jscoverage['eventLayoutManager.js'][5]++;
  $("#templates .event").clone().appendTo($("#layout-test")).attr("id", "layout-event");
  _$jscoverage['eventLayoutManager.js'][6]++;
  this.recalculateConstants = true;
  _$jscoverage['eventLayoutManager.js'][7]++;
  $(window).resize(this.resize);
  _$jscoverage['eventLayoutManager.js'][8]++;
  return this;
});
  _$jscoverage['eventLayoutManager.js'][10]++;
  MKT.EventLayoutManager.prototype.resize = (function () {
  _$jscoverage['eventLayoutManager.js'][11]++;
  this.recalculateConstants = true;
  _$jscoverage['eventLayoutManager.js'][12]++;
  clearTimeout(this.resizeTimeout);
  _$jscoverage['eventLayoutManager.js'][13]++;
  this.resizeTimeout = setTimeout((function () {
  _$jscoverage['eventLayoutManager.js'][14]++;
  return console.log("re-layout weeks");
}), 500);
  _$jscoverage['eventLayoutManager.js'][16]++;
  return this.resizeTimeout;
});
  _$jscoverage['eventLayoutManager.js'][18]++;
  MKT.EventLayoutManager.prototype.getConstants = (function () {
  _$jscoverage['eventLayoutManager.js'][19]++;
  if (this.recalculateConstants) {
    _$jscoverage['eventLayoutManager.js'][20]++;
    return this.calculateConstants();
  }
});
  _$jscoverage['eventLayoutManager.js'][23]++;
  MKT.EventLayoutManager.prototype.calculateConstants = (function () {
  _$jscoverage['eventLayoutManager.js'][24]++;
  $("#layout-event .text").text("");
  _$jscoverage['eventLayoutManager.js'][25]++;
  this.dayWidth = $("#calendar .week td:first").width();
  _$jscoverage['eventLayoutManager.js'][26]++;
  this.dayHeight = $("#calendar .week td:first").innerHeight();
  _$jscoverage['eventLayoutManager.js'][27]++;
  this.lineHeight = $("#layout-event").outerHeight();
  _$jscoverage['eventLayoutManager.js'][28]++;
  this.linesPerDay = 1000;
  _$jscoverage['eventLayoutManager.js'][29]++;
  return $("#layout-event").width(this.dayWidth);
});
  _$jscoverage['eventLayoutManager.js'][31]++;
  MKT.EventLayoutManager.prototype.layoutEventsForWeek = (function (weekDate, events) {
  _$jscoverage['eventLayoutManager.js'][32]++;
  var _a, _b, _c, _d, event, preppedEvents, week;
  _$jscoverage['eventLayoutManager.js'][33]++;
  this.getConstants();
  _$jscoverage['eventLayoutManager.js'][34]++;
  this.initLayoutGridForWeek(weekDate);
  _$jscoverage['eventLayoutManager.js'][35]++;
  preppedEvents = this.prepareEvents(weekDate, events);
  _$jscoverage['eventLayoutManager.js'][36]++;
  week = $("#" + this.config.weekIdPrefix + weekDate.customFormat(this.config.dateFormat));
  _$jscoverage['eventLayoutManager.js'][37]++;
  $(".event", week).remove();
  _$jscoverage['eventLayoutManager.js'][38]++;
  _a = [];
  _$jscoverage['eventLayoutManager.js'][38]++;
  _c = preppedEvents;
  _$jscoverage['eventLayoutManager.js'][39]++;
  for (_b = 0, _d = _c.length; _b < _d; _b++) {
    _$jscoverage['eventLayoutManager.js'][40]++;
    event = _c[_b];
    _$jscoverage['eventLayoutManager.js'][41]++;
    _a.push(this.placeEvent(event));
}
  _$jscoverage['eventLayoutManager.js'][43]++;
  return _a;
});
  _$jscoverage['eventLayoutManager.js'][45]++;
  MKT.EventLayoutManager.prototype.placeEvent = (function (event) {
  _$jscoverage['eventLayoutManager.js'][46]++;
  var eventDOM, startLine;
  _$jscoverage['eventLayoutManager.js'][47]++;
  eventDOM = this.eventCreator.create(event);
  _$jscoverage['eventLayoutManager.js'][48]++;
  startLine = this.findLineForEvent(event);
  _$jscoverage['eventLayoutManager.js'][49]++;
  if (typeof startLine !== "undefined" && startLine !== null) {
    _$jscoverage['eventLayoutManager.js'][50]++;
    eventDOM.css({top: (startLine + 1) * this.lineHeight});
    _$jscoverage['eventLayoutManager.js'][53]++;
    eventDOM.appendTo($("#" + this.config.dayIdPrefix + event.weekStart.customFormat(this.config.dateFormat)));
    _$jscoverage['eventLayoutManager.js'][54]++;
    return this.markLayoutSpaceAsUsed(event, startLine);
  }
  else {
    _$jscoverage['eventLayoutManager.js'][56]++;
    return console.log("No room to place event: " + event.summary);
  }
});
  _$jscoverage['eventLayoutManager.js'][59]++;
  MKT.EventLayoutManager.prototype.initLayoutGridForWeek = (function (weekDate) {
  _$jscoverage['eventLayoutManager.js'][60]++;
  var _a, day, index, row;
  _$jscoverage['eventLayoutManager.js'][61]++;
  this.layoutGrid = [];
  _$jscoverage['eventLayoutManager.js'][62]++;
  (_a = this.linesPerDay);
  _$jscoverage['eventLayoutManager.js'][64]++;
  for (row = 0; row < _a; row += 1) {
    _$jscoverage['eventLayoutManager.js'][65]++;
    this.layoutGrid[row] = {};
    _$jscoverage['eventLayoutManager.js'][66]++;
    for (day = 0; day <= 6; day += 1) {
      _$jscoverage['eventLayoutManager.js'][67]++;
      index = weekDate.addDays(day);
      _$jscoverage['eventLayoutManager.js'][68]++;
      this.layoutGrid[row][index] = 0;
}
}
  _$jscoverage['eventLayoutManager.js'][71]++;
  return null;
});
  _$jscoverage['eventLayoutManager.js'][73]++;
  MKT.EventLayoutManager.prototype.prepareEvents = (function (weekDate, events) {
  _$jscoverage['eventLayoutManager.js'][74]++;
  var _a, _b, _c, event, preppedEvents;
  _$jscoverage['eventLayoutManager.js'][75]++;
  preppedEvents = [];
  _$jscoverage['eventLayoutManager.js'][76]++;
  _b = events;
  _$jscoverage['eventLayoutManager.js'][77]++;
  for (_a = 0, _c = _b.length; _a < _c; _a++) {
    _$jscoverage['eventLayoutManager.js'][78]++;
    event = _b[_a];
    _$jscoverage['eventLayoutManager.js'][79]++;
    event.weekStart = event.start < weekDate? weekDate: event.start;
    _$jscoverage['eventLayoutManager.js'][80]++;
    event.weekEnd = event.end > weekDate.addWeeks(1)? weekDate.addWeeks(1): event.end;
    _$jscoverage['eventLayoutManager.js'][81]++;
    event.weekLength = Math.round((event.weekEnd.getTime() - event.weekStart.getTime()) / (86400000));
    _$jscoverage['eventLayoutManager.js'][82]++;
    event.isStart = event.start >= weekDate;
    _$jscoverage['eventLayoutManager.js'][83]++;
    event.isEnd = event.end <= weekDate.addWeeks(1);
    _$jscoverage['eventLayoutManager.js'][84]++;
    event.requiredLines = event.isStart && event.isEnd? this.getRequiredLines(event): 1;
    _$jscoverage['eventLayoutManager.js'][85]++;
    preppedEvents.push(event);
}
  _$jscoverage['eventLayoutManager.js'][87]++;
  preppedEvents.sort(this.eventSort);
  _$jscoverage['eventLayoutManager.js'][88]++;
  return preppedEvents;
});
  _$jscoverage['eventLayoutManager.js'][90]++;
  MKT.EventLayoutManager.prototype.getRequiredLines = (function (event) {
  _$jscoverage['eventLayoutManager.js'][91]++;
  var text, textEl;
  _$jscoverage['eventLayoutManager.js'][92]++;
  text = event.summary;
  _$jscoverage['eventLayoutManager.js'][93]++;
  textEl = $("#layout-event .text");
  _$jscoverage['eventLayoutManager.js'][94]++;
  textEl.text(text);
  _$jscoverage['eventLayoutManager.js'][95]++;
  $("#layout-event").width((event.weekLength * 14.2857) + "%");
  _$jscoverage['eventLayoutManager.js'][96]++;
  return Math.ceil(textEl.outerHeight() / this.lineHeight);
});
  _$jscoverage['eventLayoutManager.js'][98]++;
  MKT.EventLayoutManager.prototype.findLineForEvent = (function (event) {
  _$jscoverage['eventLayoutManager.js'][99]++;
  var date, i, isSpace, j;
  _$jscoverage['eventLayoutManager.js'][100]++;
  for (i = 0; i <= this.layoutGrid.length - event.requiredLines; i += 1) {
    _$jscoverage['eventLayoutManager.js'][101]++;
    isSpace = 0;
    _$jscoverage['eventLayoutManager.js'][102]++;
    for (j = i; j < i + event.requiredLines; j += 1) {
      _$jscoverage['eventLayoutManager.js'][103]++;
      date = event.weekStart;
      _$jscoverage['eventLayoutManager.js'][104]++;
      while (date < event.weekEnd) {
        _$jscoverage['eventLayoutManager.js'][105]++;
        isSpace += this.layoutGrid[j][date];
        _$jscoverage['eventLayoutManager.js'][106]++;
        date = date.addDays(1);
}
}
    _$jscoverage['eventLayoutManager.js'][109]++;
    if (isSpace === 0) {
      _$jscoverage['eventLayoutManager.js'][110]++;
      return i;
    }
}
  _$jscoverage['eventLayoutManager.js'][113]++;
  return null;
});
  _$jscoverage['eventLayoutManager.js'][115]++;
  MKT.EventLayoutManager.prototype.markLayoutSpaceAsUsed = (function (event, startLine) {
  _$jscoverage['eventLayoutManager.js'][116]++;
  var date, j;
  _$jscoverage['eventLayoutManager.js'][117]++;
  for (j = startLine; j < startLine + event.requiredLines; j += 1) {
    _$jscoverage['eventLayoutManager.js'][118]++;
    date = event.weekStart;
    _$jscoverage['eventLayoutManager.js'][119]++;
    while (date < event.weekEnd) {
      _$jscoverage['eventLayoutManager.js'][120]++;
      this.layoutGrid[j][date] = 1;
      _$jscoverage['eventLayoutManager.js'][121]++;
      date = date.addDays(1);
}
}
  _$jscoverage['eventLayoutManager.js'][124]++;
  return null;
});
  _$jscoverage['eventLayoutManager.js'][126]++;
  MKT.EventLayoutManager.prototype.eventSort = (function (eventA, eventB) {
  _$jscoverage['eventLayoutManager.js'][127]++;
  if (eventB.weekLength === eventA.weekLength) {
    _$jscoverage['eventLayoutManager.js'][128]++;
    if (eventB.length === eventA.length) {
      _$jscoverage['eventLayoutManager.js'][129]++;
      return eventB.summary.length - eventA.summary.length;
    }
    else {
      _$jscoverage['eventLayoutManager.js'][131]++;
      return eventB.length - eventA.length;
    }
  }
  else {
    _$jscoverage['eventLayoutManager.js'][134]++;
    return eventB.weekLength - eventA.weekLength;
  }
});
})();
_$jscoverage['eventLayoutManager.js'].source = ["(function(){","  MKT.EventLayoutManager = function(config, eventCreator) {","    this.config = config;","    this.eventCreator = eventCreator;","    $(\"#templates .event\").clone().appendTo($(\"#layout-test\")).attr(\"id\", \"layout-event\");","    this.recalculateConstants = true;","    $(window).resize(this.resize);","    return this;","  };","  MKT.EventLayoutManager.prototype.resize = function() {","    this.recalculateConstants = true;","    clearTimeout(this.resizeTimeout);","    this.resizeTimeout = setTimeout(function() {","      return console.log('re-layout weeks');","    }, 500);","    return this.resizeTimeout;","  };","  MKT.EventLayoutManager.prototype.getConstants = function() {","    if (this.recalculateConstants) {","      return this.calculateConstants();","    }","  };","  MKT.EventLayoutManager.prototype.calculateConstants = function() {","    $(\"#layout-event .text\").text(\"\");","    this.dayWidth = $(\"#calendar .week td:first\").width();","    this.dayHeight = $(\"#calendar .week td:first\").innerHeight();","    this.lineHeight = $(\"#layout-event\").outerHeight();","    this.linesPerDay = 1000;","    return $(\"#layout-event\").width(this.dayWidth);","  };","  MKT.EventLayoutManager.prototype.layoutEventsForWeek = function(weekDate, events) {","    var _a, _b, _c, _d, event, preppedEvents, week;","    this.getConstants();","    this.initLayoutGridForWeek(weekDate);","    preppedEvents = this.prepareEvents(weekDate, events);","    week = $(\"#\" + this.config.weekIdPrefix + weekDate.customFormat(this.config.dateFormat));","    $('.event', week).remove();","    _a = []; _c = preppedEvents;","    for (_b = 0, _d = _c.length; _b &lt; _d; _b++) {","      event = _c[_b];","      _a.push(this.placeEvent(event));","    }","    return _a;","  };","  MKT.EventLayoutManager.prototype.placeEvent = function(event) {","    var eventDOM, startLine;","    eventDOM = this.eventCreator.create(event);","    startLine = this.findLineForEvent(event);","    if (typeof startLine !== \"undefined\" &amp;&amp; startLine !== null) {","      eventDOM.css({","        top: (startLine + 1) * this.lineHeight","      });","      eventDOM.appendTo($(\"#\" + this.config.dayIdPrefix + event.weekStart.customFormat(this.config.dateFormat)));","      return this.markLayoutSpaceAsUsed(event, startLine);","    } else {","      return console.log(\"No room to place event: \" + event.summary);","    }","  };","  MKT.EventLayoutManager.prototype.initLayoutGridForWeek = function(weekDate) {","    var _a, day, index, row;","    this.layoutGrid = [];","    (_a = this.linesPerDay);","","    for (row = 0; row &lt; _a; row += 1) {","      this.layoutGrid[row] = {};","      for (day = 0; day &lt;= 6; day += 1) {","        index = weekDate.addDays(day);","        this.layoutGrid[row][index] = 0;","      }","    }","    return null;","  };","  MKT.EventLayoutManager.prototype.prepareEvents = function(weekDate, events) {","    var _a, _b, _c, event, preppedEvents;","    preppedEvents = [];","    _b = events;","    for (_a = 0, _c = _b.length; _a &lt; _c; _a++) {","      event = _b[_a];","      event.weekStart = event.start &lt; weekDate ? weekDate : event.start;","      event.weekEnd = event.end &gt; weekDate.addWeeks(1) ? weekDate.addWeeks(1) : event.end;","      event.weekLength = Math.round((event.weekEnd.getTime() - event.weekStart.getTime()) / (1000 * 60 * 60 * 24));","      event.isStart = event.start &gt;= weekDate;","      event.isEnd = event.end &lt;= weekDate.addWeeks(1);","      event.requiredLines = event.isStart &amp;&amp; event.isEnd ? this.getRequiredLines(event) : 1;","      preppedEvents.push(event);","    }","    preppedEvents.sort(this.eventSort);","    return preppedEvents;","  };","  MKT.EventLayoutManager.prototype.getRequiredLines = function(event) {","    var text, textEl;","    text = event.summary;","    textEl = $(\"#layout-event .text\");","    textEl.text(text);","    $(\"#layout-event\").width((event.weekLength * 14.2857) + \"%\");","    return Math.ceil(textEl.outerHeight() / this.lineHeight);","  };","  MKT.EventLayoutManager.prototype.findLineForEvent = function(event) {","    var date, i, isSpace, j;","    for (i = 0; i &lt;= this.layoutGrid.length - event.requiredLines; i += 1) {","      isSpace = 0;","      for (j = i; j &lt; i + event.requiredLines; j += 1) {","        date = event.weekStart;","        while (date &lt; event.weekEnd) {","          isSpace += this.layoutGrid[j][date];","          date = date.addDays(1);","        }","      }","      if (isSpace === 0) {","        return i;","      }","    }","    return null;","  };","  MKT.EventLayoutManager.prototype.markLayoutSpaceAsUsed = function(event, startLine) {","    var date, j;","    for (j = startLine; j &lt; startLine + event.requiredLines; j += 1) {","      date = event.weekStart;","      while (date &lt; event.weekEnd) {","        this.layoutGrid[j][date] = 1;","        date = date.addDays(1);","      }","    }","    return null;","  };","  MKT.EventLayoutManager.prototype.eventSort = function(eventA, eventB) {","    if (eventB.weekLength === eventA.weekLength) {","      if (eventB.length === eventA.length) {","        return eventB.summary.length - eventA.summary.length;","      } else {","        return eventB.length - eventA.length;","      }","    } else {","      return eventB.weekLength - eventA.weekLength;","    }","  };","","})();"];
