/**
 * @fileOverview Decafbad.Utils  package.
 * @author <a href="http://decafbad.com">l.m.orchard@pobox.com</a>
 * @version 0.1
 */
/*jslint laxbreak: true */
/*global Decafbad, Mojo, $L, $H */
Decafbad.Utils = (function () { /** @lends Decafbad.Utils */

    return {

        /**
         * Package initialization.
         */
        init: function () {
            return this;
        }, 

        /**
         * Simplified banner display, message only.
         *
         * @param {string} msg Message text to display
         */
        showSimpleBanner: function (msg) {
            Mojo.Controller.getAppController().showBanner(
                { messageText: msg }, {}, null
            );
        },

        /**
         * General utility function to generate listeners suitable for mass
         * unlistening on cleanup.
         */
        setupListeners: function (listeners, that) {
            that.listeners = listeners.map(function (listener) {
                var new_listener = [
                    typeof listener[0] == 'string' ?
                        this.controller.get(listener[0]) : listener[0],
                    listener[1],
                    listener[2].bindAsEventListener(this)
                ];
                Mojo.Event.listen.apply(Mojo.Event, new_listener);
                return new_listener;
            }, that);
        },

        /**
         * Clear listeners generated by mapListener.
         */
        clearListeners: function (that) {
            that.listeners.each(function (listener) {
                Mojo.Event.stopListening.apply(Mojo.Event, listener);
            });
        },

        /**
         * Show the loading spinner.
         */
        showLoadingSpinner: function (that) {
            that.scrim.show();
        },

        /**
         * Hide the loading spinner.
         */
        hideLoadingSpinner: function (that) {
            that.scrim.hide();
        },

        /**
         * Set up the loading spinner, including an instance of a semi-opaque
         * scrim.
         */
        setupLoadingSpinner: function (that) {
            that.scrim = null;
            that.controller.setupWidget(
                "loading-spinner",
                { spinnerSize: Mojo.Widget.spinnerLarge },
                { spinning: true }
            );
            that.scrim = Mojo.View.createScrim(
                that.controller.document,
                { scrimClass:'palm-scrim' }
            );
            that.controller.get("loading-scrim")
                .appendChild(that.scrim)
                .appendChild(that.controller.get('loading-spinner')); 

            that.scrim.hide();
        },

        EOF: null
    };

}().init());
